apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: curtail
  name: curtail
spec:
  replicas: 1
  selector:
    matchLabels:
      app: curtail
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: curtail
    spec:
      imagePullSecrets:
      - name: curtpullsecret
      containers:
      - name: curtail
        image: curt.int.curtailsecurity.com/curtail-sensor:latest
        imagePullPolicy: Always
        resources:
          {{- .Values.curtail.resources | toYaml | nindent 12 }}
        env:
        - name: CURTAIL_PATH
          value: /home/curtail/private
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: curtdb-secret
              key: url
        ports:
        - containerPort: 80
      restartPolicy: Always
      initContainers:
      - name: init-myservice
        image: curlimages/curl:latest
          #command: ['sh', '-c', {{- printf "until curl -ik -H 'Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)' https://kubernetes.default.svc.cluster.local/api/v1/namespaces/%s/services/curtail | grep 'ip';  do echo waiting for myservice; sleep 2; done" .Values.kube.namespace | quote }} ]
        command: ['sh', '-c', {{- printf "until curl -ik -H \"Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\" https://kubernetes.default.svc.cluster.local/api/v1/namespaces/%s/services/curtail | grep 'ip';  do echo waiting for myservice; sleep 2; done" .Values.kube.namespace | quote }} ]
status: {}
